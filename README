Authors: Jonathan Cobian and Oliver Lamb

To run our game, first type "python server.py <port 1> <port 2>" into the terminal of one of the student machines, where ports 1 and 2 are both open. (We use 2 ports, one to constantly send over the blender position, the other to send over the positions of all the fruits and a command to freeze them. This is because when we used the same connection for both, the blender was lagging.) The server terminal will then display that it is waiting for users to connect. Then, type "python client.py <student0X.cse.nd.edu> <port 1> <port 2>" on two other machines where <student0X.cse.nd.edu> is replaced with the student machine that you are running the server on, and <port 1> and <port 2> correspond to the ports specified in your command line for the server in the same order. This will bring up a pygame window in each of the two client machines.

The window will begin with an instruction telling you which blender you are and then count down from 3 to 1. Then the window will be split down the middle, where the left side is the user and the right side is the opponent. Each user has a blender and the goal of the game is to use the left and right arrow keys to move and catch the falling fruits for your smoothie. While fruits increase your score, as designated as the percentage full in each player's respective corner, vegetables will decrease your score. Scores cannot go below zero. The golden pineapple is worth double that of a regular fruit. In addition, a user can use the mouse to click on fruits and vegetables to freeze them for three seconds. A user can use this to slow his opponent from gathering fruits, or he can slow his own fruits in order to make it easier for him to gather as many fruits as he can. The game ends when a player reaches 100% full blender. The screen then shows whether you or your opponent won.